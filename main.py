import src.preprocess as pp
import src.train as tr
import src.evaluate as ev

if __name__ == '__main__':

    # ะญัะฐะฟั ะพะฑััะตะฝะธั

    #print("1) ะัะตะฟัะพัะตััะธะฝะณ ะดะฐะฝะฝัั")
    #pp.preprocess()
    #print("\n2) ะะฑััะตะฝะธะต ะผะพะดะตะปะธ")
    #tr.train()
    #print("\n3) ะัะตะฝะบะฐ ะฝะฐ ัะตััะพะฒะพะผ ะฝะฐะฑะพัะต")
    #ev.evaluate()

    print("\n ะะฒะพะดะธัะต ัะตะบัั ะดะปั ะฟัะพะฒะตัะบะธ ัะพะบัะธัะฝะพััะธ.")
    print(" ะะปั ะฒััะพะดะฐ ะฒะฒะตะดะธัะต 'exit' ะธะปะธ 'quit'.")
    while True:
        txt = input("\nะะฒะตะดะธัะต ัะตะบัั: ").strip()
        if txt.lower() in ('exit', 'quit'):
            print("ะััะพะด.")
            break
        prob = ev.predict_text(txt)
        label = "ะขะะะกะะงะะซะ" if prob > 0.8 else "ะะ ัะพะบัะธัะฝัะน"
        print(f"๐น ะะตัะพััะฝะพััั ัะพะบัะธัะฝะพััะธ: {prob:.2f} โ {label}")
